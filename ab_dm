SELECT paa.action_code        Action,        paa.reason_code        Reason,        fnd.meaning        Ethnicity,        pe.ethnicity        EthCode,        pjl.information2        Job_EEO,        pj.attribute1        Job_EEO_Grp,        Substr (dp.name, 1, 3)        compNum,        Substr (dp.name, 5, 5)        cc,        ppn.last_name        Last,        ppn.first_name        First,        ppn.middle_names        Middle,        pj.attribute5        jobTitle,        hla.location_name        AS Work_Facility_Location,/* (SELECT hzg.geography_code                                             FROM hz_geographies hzg                                            WHERE hzg.country_code = 'US'                                              AND hzg.geography_use = 'MASTER_REF'                                              AND hzg.geography_type = 'STATE'                                              AND hzg.geography_element1 = 'United States'                                              AND (UPPER(hzg.geography_name) = UPPER(hla.region_2)  OR UPPER(hzg.geography_code) = UPPER(hla.region_2))                                             )   */        Decode (hla.region_2, 'Minnesota', 'MN',                              'Ohio', 'OH',                              'Indiana', 'IN',                              'Texas', 'TX',                              'Missouri', 'MO',                              'Michigan', 'MI',                              'Wisconsin', 'WI',                              'Illinois', 'IL',                              'Alabama', 'AL',                              'Alaska', 'AK',                              'Arizona', 'AZ',                              'Arkansas', 'AR',                              'California', 'CA',                              'Colorado', 'CO',                              'Connecticut', 'CT',                              'Delaware', 'DE',                              'Florida', 'FL',                              'Georgia', 'GA',                              'Hawaii', 'HI',                              'Idaho', 'ID',                              'Iowa', 'IA',                              'Kansas', 'KS',                              'Kentucky', 'KY',                              'Louisiana', 'LA',                              'Maine', 'ME',                              'Maryland', 'MD',                              'Massachusetts', 'MA',                              'Mississippi', 'MS',                              'Montana', 'MT',                              'Nebraska', 'NE',                              'Nevada', 'NV',                              'New Hampshire', 'NH',                              'New Jersey', 'NJ',                              'New Mexico', 'NM',                              'New York', 'NY',                              'North Carolina', 'NC',                              'North Dakota', 'ND',                              'Oklahoma', 'OK',                              'Oregon', 'OR',                              'Pennsylvania', 'PA',                              'Rhode Island', 'RI',                              'South Carolina', 'SC',                              'South Dakota', 'SD',                              'Tennessee', 'TN',                              'Utah', 'UT',                              'Vermont', 'VT',                              'Virginia', 'VA',                              'Washington', 'WA',                              'West Virginia', 'WV',                              'Wyoming', 'WY',                              hla.region_2)        State,        Lpad (papf.person_number, 6, '0')        person_number,        To_char (ppos.date_start, 'MM/DD/YYYY', 'nls_date_language = American')        hireDt,        haou.attribute3        region,        pj.job_code        jobCode,        Decode (Nvl (pjl.information1, 'a'), 'EXEMPT', 'E',                                             'NONEXEMPT', 'NE')        jobInfo,        pawm.value        FTE,        pgf.grade_code        PG,        dp.name        Dept,        leg.sex        Gender,        paa.employment_category        Emp_Category_Code,        fndCat.meaning        Emp_Category,        pjl_old.information2        Job_EEO_old,        pj_old.attribute1        Job_EEO_Grp_old,        Substr (dp_old.name, 1, 3)        compNum_old,        Substr (dp_old.name, 5, 5)        cc_old,        pj_old.attribute5        jobTitle_old,        hla_old.location_name        Work_Facility_Location_old,/* (SELECT hzg_old.geography_code                                              FROM hz_geographies hzg_old                                             WHERE hzg_old.country_code = 'US'                                               AND hzg_old.geography_use = 'MASTER_REF'                                               AND hzg_old.geography_type = 'STATE'                                               AND hzg_old.geography_element1 = 'United States'                                               AND (UPPER(hzg_old.geography_name) = UPPER(hla_old.region_2)  OR UPPER(hzg_old.geography_code) = UPPER(hla_old.region_2))                                              )     */        Decode (hla_old.region_2, 'Minnesota', 'MN',                                  'Ohio', 'OH',                                  'Indiana', 'IN',                                  'Texas', 'TX',                                  'Missouri', 'MO',                                  'Michigan', 'MI',                                  'Wisconsin', 'WI',                                  'Illinois', 'IL',                                  'Alabama', 'AL',                                  'Alaska', 'AK',                                  'Arizona', 'AZ',                                  'Arkansas', 'AR',                                  'California', 'CA',                                  'Colorado', 'CO',                                  'Connecticut', 'CT',                                  'Delaware', 'DE',                                  'Florida', 'FL',                                  'Georgia', 'GA',                                  'Hawaii', 'HI',                                  'Idaho', 'ID',                                  'Iowa', 'IA',                                  'Kansas', 'KS',                                  'Kentucky', 'KY',                                  'Louisiana', 'LA',                                  'Maine', 'ME',                                  'Maryland', 'MD',                                  'Massachusetts', 'MA',                                  'Mississippi', 'MS',                                  'Montana', 'MT',                                  'Nebraska', 'NE',                                  'Nevada', 'NV',                                  'New Hampshire', 'NH',                                  'New Jersey', 'NJ',                                  'New Mexico', 'NM',                                  'New York', 'NY',                                  'North Carolina', 'NC',                                  'North Dakota', 'ND',                                  'Oklahoma', 'OK',                                  'Oregon', 'OR',                                  'Pennsylvania', 'PA',                                  'Rhode Island', 'RI',                                  'South Carolina', 'SC',                                  'South Dakota', 'SD',                                  'Tennessee', 'TN',                                  'Utah', 'UT',                                  'Vermont', 'VT',                                  'Virginia', 'VA',                                  'Washington', 'WA',                                  'West Virginia', 'WV',                                  'Wyoming', 'WY',                                  hla_old.region_2)        AS State_old,        haou_old.attribute3        region_old,        pj_old.job_code        jobCode_old,        Decode (Nvl (pjl_old.information1, 'a'), 'EXEMPT', 'E',                                                 'NONEXEMPT', 'NE')        jobInfo_old,        pawm_old.value        FTE_old,        pgf_old.grade_code        PG_old,        dp_old.name        Dept_old,        fndCat_old.meaning        Emp_Category_Old,        paa.effective_start_date        Asg_start,        paa.effective_end_date        Asg_end,        paa_old.effective_start_date        Asg_old_start,        paa_old.effective_end_date        Asg_old_end,        fabu.bu_name        Business_Unit,        fabu.bu_name        Business_Unit_Old FROM   per_all_people_f papf,        per_persons per1,        per_all_assignments_m paa,        per_departments dp,        per_person_names_f ppn,        hr_locations_all hla,        per_periods_of_service ppos,        per_jobs_f pj,        per_grades_f_vl pgf,        per_job_leg_f pjl,        hr_all_organization_units_f_vl haou,        per_assign_work_measures_f pawm,        per_people_legislative_f leg,        per_ethnicities pe,        fnd_lookup_values fnd,        fnd_lookup_values fndCat,        fun_all_business_units_v fabu,        per_all_assignments_m paa_old,        per_departments dp_old,        hr_locations_all hla_old,        per_jobs_f pj_old,        per_grades_f_vl pgf_old,        per_job_leg_f pjl_old,        hr_all_organization_units_f_vl haou_old,        per_assign_work_measures_f pawm_old,        fnd_lookup_values fndCat_old,        fun_all_business_units_v fabu_old WHERE  1 = 1        AND :p_effective_date_end BETWEEN papf.effective_start_date AND                                          papf.effective_end_date        AND per1.person_id = papf.person_id        AND paa.person_id = papf.person_id        AND paa.effective_latest_change = 'Y'        AND paa.primary_flag = 'Y'        AND paa.assignment_type = 'E'        AND paa.system_person_type = 'EMP'        AND paa.effective_start_date BETWEEN            :p_effective_date_start AND :p_effective_date_end        AND dp.organization_id (+) = paa.organization_id        AND paa.effective_start_date BETWEEN            dp.effective_start_date (+) AND dp.effective_end_date (+)        AND ppn.person_id = papf.person_id        AND ppn.name_type = 'GLOBAL'        AND :p_effective_date_end BETWEEN            ppn.effective_start_date AND ppn.effective_end_date        AND hla.location_id (+) = paa.location_id        AND paa.effective_start_date BETWEEN hla.effective_start_date (+) AND                                             hla.effective_end_date (+)        AND ppos.period_of_service_id = paa.period_of_service_id        AND paa.effective_start_date BETWEEN ppos.date_start AND                                             Nvl (ppos.actual_termination_date,                                             paa.effective_start_date)        AND pj.job_id (+) = paa.job_id        AND paa.effective_start_date BETWEEN            pj.effective_start_date (+) AND pj.effective_end_date (+)        AND pgf.grade_id (+) = paa.grade_id        AND paa.effective_start_date BETWEEN pgf.effective_start_date (+) AND                                             pgf.effective_end_date (+)        AND pjl.information_category(+) LIKE 'HRX_US_JOBS'        AND pjl.job_id (+) = pj.job_id        AND pj.effective_start_date BETWEEN pjl.effective_start_date (+) AND                                            pjl.effective_end_date (+)        AND paa.organization_id = haou.organization_id (+)        AND paa.effective_start_date BETWEEN haou.effective_start_date (+) AND                                             haou.effective_end_date (+)        AND paa.assignment_id = pawm.assignment_id (+)        AND paa.effective_start_date BETWEEN            Nvl(pawm.effective_start_date (+), paa.effective_start_date) AND                Nvl (pawm.effective_end_date (+), paa.effective_start_date)        AND pawm.unit (+) = 'FTE'        AND papf.person_id = leg.person_id (+)        AND :p_effective_date_end BETWEEN Nvl(leg.effective_start_date (+),                                          :p_effective_date_end) AND            Nvl(leg.effective_end_date (+), :p_effective_date_end)        AND leg.legislation_code (+) = 'US'        AND papf.person_id = pe.person_id (+)        AND fnd.lookup_type (+) = 'PER_ETHNICITY'        AND fnd.source_lang (+) = 'US'        AND fnd.lookup_code (+) = pe.ethnicity        AND paa.employment_category = fndCat.lookup_code (+)        AND paa_old.person_id = papf.person_id        AND paa_old.effective_latest_change = 'Y'        AND paa_old.primary_flag = 'Y'        AND paa_old.assignment_type = 'E'        AND paa_old.system_person_type = 'EMP'        AND paa_old.effective_end_date BETWEEN            :p_effective_date_start AND :p_effective_date_end        AND paa_old.effective_end_date = paa.effective_start_date - 1        AND dp_old.organization_id (+) = paa_old.organization_id        AND paa_old.effective_end_date BETWEEN            dp_old.effective_start_date (+) AND            dp_old.effective_end_date (+)        AND hla_old.location_id (+) = paa_old.location_id        AND paa_old.effective_end_date BETWEEN            hla_old.effective_start_date (+) AND            hla_old.effective_end_date (+)        AND pj_old.job_id (+) = paa_old.job_id        AND paa_old.effective_end_date BETWEEN            pj_old.effective_start_date (+) AND            pj_old.effective_end_date (+)        AND pgf_old.grade_id (+) = paa_old.grade_id        AND paa_old.effective_end_date BETWEEN            pgf_old.effective_start_date (+) AND            pgf_old.effective_end_date (+)        AND pjl_old.information_category(+) LIKE 'HRX_US_JOBS'        AND pjl_old.job_id (+) = pj_old.job_id        AND pj_old.effective_start_date BETWEEN            pjl_old.effective_start_date (+) AND            pjl_old.effective_end_date (+)        AND paa_old.organization_id = haou_old.organization_id (+)        AND paa_old.effective_end_date BETWEEN            haou_old.effective_start_date (+) AND            haou_old.effective_end_date (+)        AND paa_old.assignment_id = pawm_old.assignment_id (+)        AND paa_old.effective_end_date BETWEEN                Nvl(pawm_old.effective_start_date (+), paa_old.effective_end_date                ) AND                Nvl (                pawm_old.effective_end_date (+), paa_old.effective_end_date)        AND pawm_old.unit (+) = 'FTE'        AND paa_old.employment_category = fndCat_old.lookup_code (+)        AND pj.job_code <> pj_old.job_code        AND fabu.bu_id (+) = paa.business_unit_id        AND fabu_old.bu_id (+) = paa_old.business_unit_id ORDER  BY person_number ASC /* Ketan */  
